<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace Prj\Bll;

/**
 * 国槐的投资者持有信息
 * 投资者相关的业务
 * Class Investor
 * @package Prj\Bll
 */
class Investor extends \Prj\Bll\_BllBase {

    public function init()
    {
        \Prj\Loger::setKv('`_`');
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function getMyHomeData($params = []){
        if(!\Lib\Misc\Result::paramsCheck($params , ['userId'])){
            return $this->resultError('参数错误#' . \Lib\Misc\Result::$errorParam);
        }
        $investorInfo = \Prj\Model\MimosaUser::getUserByUcUserId($params['userId']);
        $investorId = $investorInfo['oid'];
        if(empty($investorId))return $this->resultError('投资者信息不存在');
        $huoInfo = $this->getT0ProInfo($params['userId']);
        $this->log($huoInfo , '$huoInfo');
        $dingInfo = $this->getT0ProInfo($params['userId'] , 1);
        $this->log($dingInfo , '$dingInfo');
        //todo 不读国槐数据
    }

    /**
     * Hand 获取用户持有的产品收益情况
     * @param $userId
     * @param int $type 0=活期 1=定期
     * @return array
     * @throws \Exception
     */
    protected function getT0ProInfo($userId , $type = 0){
        if($type == 0){
            $proList = $this->getT0ProList($userId);
        }else if($type == 1){
            $proList = $this->getTnProList($userId);
        }else{
            throw  new \Exception(__METHOD__ . ' error type');
        }
        if(empty($proList))return [];

        $data = [];
        foreach ($proList as $proId){
            $data[$proId] = $this->getHoldInfo($userId , $proId);
        }

        return $data;
    }

    /**
     * Hand 获取用户持有的活期的产品列表
     * @param $userId
     * @return mixed
     */
    public function getT0ProList($userId){
        $key = 'm:h:i:' . $userId;
        return $this->getRedisVal(['ZRANGE' , $key , 0 , 1 ]);
    }

    /**
     * Hand 获取用户持有的定期的产品列表
     * @param $userId
     * @return mixed
     */
    public function getTnProList($userId){
        $key = 'm:h:i:tn:' . $userId;
        return $this->getRedisVal(['ZRANGE' , $key , 0 , 1 ]);
    }

    /**
     * Hand 获取用户持有的产品的收益详情
     * @param $userId
     * @param $proId
     * @return array
     */
    public function getHoldInfo($userId  , $proId){
        $key = 'm:i:p:' . $userId . ':' . $proId;
        $fields = $this->getRedisVal(['HKEYS' , $key ]);
        if(empty($fields))return [];
        $data = [];
        foreach ($fields as $field){
            $data[$field] = $this->getRedisVal(['HGET' , $key , $field]);
        }
        return $data;
    }

    /**
     * Hand 获取投资者的账户详情
     * @param $investorId
     * @return mixed
     */
    public function getInvestInfo($investorId){
        $key = 'm:investor:' . $investorId;
        return $this->getRedisVal(['ZRANGE' , $key , 0 , 1 ]);
    }

    /**
     * Hand 执行相应的redis命令
     * @param $cmd
     * @return mixed
     */
    protected function getRedisVal($cmd){
        $redis = \Prj\Redis\Base::getDB();
        return $redis->exec([
            $cmd
        ]);
    }

    public function test($params = []){
        $userId = $params['userId'];
        $t0ProList = $this->getT0ProList($userId);
        var_dump($t0ProList);

        $tnProList = $this->getTnProList($userId);
        var_dump($tnProList);

        $t0Pro = [];
        foreach ((array)$t0ProList as $proId){
            $info = $this->getHoldInfo($userId , $proId);
            $t0Pro[$proId] = $info;
        }
        var_dump($t0Pro);

        $tnPro = [];
        foreach ((array)$tnProList as $proId){
            $info = $this->getHoldInfo($userId , $proId);
            $tnPro[$proId] = $info;
        }
        var_dump($tnPro);

        $ret = $this->getMyHomeData(['userId' => $userId]);
    }
}
