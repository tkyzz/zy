<?php
/**
 * Created by PhpStorm.
 * User: Hand
 * Date: 2017/7/11
 * Time: 17:44
 */

namespace Prj\Bll\Tmp;

use Prj\Loger;

class ZyHeroRank07211 extends \Prj\Bll\_BllBase
{
    /**
     * Hand 定时任务的入口
     */
    public function crond(){
        \Prj\Loger::$prefix = '[crond]';
        //排行榜生存时间
        if(!\Prj\Tool\Debug::isTestEnv()){
            if(date('YmdHis') < $this->getIni('start')){
                \Prj\Loger::out('活动未开始 '.$this->getIni('start'));
                return;
            }
            if(date('YmdHis') >= $this->getIni('cacheFinish')){
                return;
            }
        }
        \Prj\Loger::out('crond start...');
        $this->resetCache();
    }

    /**
     * Hand 入口,获取数据
     * @return array
     */
    public function getData(){
        //todo $data = $this->getCache();
        $data = [];
        if(empty($data)){
            return $this->resetCache();
        }
        //如果检查到定时任务超过半小时没有执行,就去更新排行榜
        if(time() - strtotime($data['mark']) > 30 * 60 && $data['mark'] < $this->getIni('cacheFinish')){
            return $this->resetCache();
        }
        return $this->resultOK($data);
    }

//=============================================================

    protected $redis_key = 'php:tmp:ZyHeroRank0721';

    protected function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        \Prj\Loger::$prefix .= '[ZyHeroRank0721]';
    }

    /**
     * Hand 读取配置
     * @param $key
     * @return mixed
     */
    protected function getIni($key){
        $k = 'Activity.ZyHeroRank0721.'.$key;
        $val = \Sooh2\Misc\Ini::getInstance()->getIni($k);
        \Prj\Loger::setKv('ini',$val);
        if($val === null)$this->fatalErr('配置缺失#' . $k);
        return $val;
    }

    /**
     * Hand 获取数据库对象
     * @return \Sooh2\DB\Interfaces\DB
     */
    protected function redis(){
        return \Prj\Redis\Base::getDB();
    }

    /**
     * Hand 刷新缓存的数据
     * @return array
     */
    protected function resetCache(){
        $data = $this->getDataFromDb();
        if(empty($data)){
            return $this->resultError('服务器忙，请稍后重试！');
        }
        $ret = $this->setCache($data);
        if(!$ret)\Prj\Loger::out('缓存失败！' , LOG_ERR);
        return $this->resultOK($data);
    }

    /**
     * Hand 从数据库读取数据然后完成拼装
     * @return array
     */
    protected function getDataFromDb(){
        //todo 拼数据
        //$data = $this->createExampleData();
        $labelName = $this->getIni('labelName');


        $list =$this->getTotalRank($labelName);

        if(!empty($list)){
            foreach ($list as $i){
                $zyHeroRankTotalList[] =[
                    'phone' =>$i['phone'],
                    'amount'=>$i['total'],
                ];

            }
        }
        $arr = $this->getProductList($labelName);
        if(!empty($arr)){
            foreach ($arr as $it){
                $productId[]=[
                    'productId'=>$it['productId'],
                ];
            }
        }
        $tmp = $this->getPerRank($productId['productId']);
        if(!empty($tmp)){
            foreach ($tmp as $item){
                $zyHeroPerList[] =[
                    'productName'=>$item['name'],
                    'rank'=>[
                        'phone'=>$item['phone'],
                        'amount'=>$item['total'],
                    ]
                ];

            }
        }
        $data = [
            'zyHeroPerList' =>$zyHeroPerList,
            'zyHeroRankTotalList'=>$zyHeroRankTotalList,
        ];
        $data['updateTime'] = $this->getUpdateTime();
        return $data;
    }

    /**
     * Hand 生成最近更新的时间
     * @return false|string
     */
    protected function getUpdateTime(){
        if(date('YmdHis') >= $this->getIni('cacheFinish')){
            return $this->getIni('cacheFinish');
        }
        $second = date('i');
        $second = $second >= 30 ? '30' : '00';
        return date('YmdH' . $second . '00');
    }

    /**
     * Hand 创建假数据
     * @return array
     */
    protected function createExampleData(){
        for ($i = 0;$i < 10;$i ++){
            $zyHeroRankPerlList = [];
            for ($k = 0;$k < 10;$k ++){
                $zyHeroRankPerlList[] =  [
                    'phone' => '132****'.mt_rand(1000 , 9999) , 'amount' => 100 - $k,
                ];
            }
            $zyHeroList[] = [
                'productName' => '悦享赢'.(88 . $k).'期',
                'rank' => $zyHeroRankPerlList,
            ];
            $zyHeroRankTotalList[] =  [
                'phone' => '132****'.mt_rand(1000 , 9999) , 'amount' => 100 - $k,
            ];
        }

        $data = [
            'updateTime' => '201707210530',
            'zyHeroPerList' => $zyHeroList,
            'zyHeroRankTotalList' => $zyHeroRankTotalList,
            'start' => '20170721',
            'finish' => '20170818',
        ];
        return $data;
    }

    protected function getTotalRank($labelName){
        //return ['aaa' => 'bbb'];
        if(!empty($labelName)){

            $sql =  "SELECT MPL.labelName ,MP.productOid,GP.name,MIT.oid,SUM(MIT.orderAmount) TOT,MIT.updateTime,U.userAcc
                FROM jz_db.t_money_platform_label AS MPL
                LEFT JOIN jz_db.t_money_platform_label_product AS MP ON MP.labelOid = MPL.oid
                LEFT JOIN jz_db.t_gam_product AS GP ON GP.oid = MP.productOid
                LEFT JOIN jz_db.t_money_investor_tradeorder AS MIT ON MIT.productOid = GP.oid
                LEFT JOIN jz_db.t_money_investor_baseaccount AS MIB ON MIB.Oid = MIT.investorOid
                LEFT JOIN jz_db.tb_user_0 AS U ON U.oid = MIB.userOid  
                WHERE MPL.labelName ='".$labelName."'
                AND MIT.orderStatus in('paySuccess','accepted','confirmed','done')
                GROUP BY MIB.oid
                ORDER BY TOT DESC,MAX(MIT.updateTime)
                LIMIT 10";
            $list = \Prj\Model\User::query($sql);


            foreach($list as $value){
                $total    = $value['TOT'];
                $userAcc  = $value['userAcc'];
                $labelName= $value['labelName'];
                $phone =substr_replace($userAcc,'XXXX',3,4);

                $data []=[
                    'total' => $total,
                    'phone'=> $phone,
                    'productName'=>$labelName,
                ];
            }

            return $data;
        }
    }

    protected function getPerRank($productId){

        if(!empty($productId)){


            $sql = "SELECT GP.name,SUM(MIT.orderAmount) TOT,MIT.updateTime,U.userAcc
                FROM  jz_db.t_gam_product AS GP 
                LEFT JOIN jz_db.t_money_investor_tradeorder AS MIT ON MIT.productOid = GP.oid
                LEFT JOIN jz_db.t_money_investor_baseaccount AS MIB ON MIB.Oid = MIT.investorOid
                LEFT JOIN jz_db.tb_user_0 AS U ON U.oid = MIB.userOid  
                WHERE GP.oid = '".$productId."'
                AND MIT.orderStatus in('paySuccess','accepted','confirmed','done')
                GROUP BY GP.name
                ORDER BY TOT DESC,MAX(MIT.updateTime)
                LIMIT 10";
            $list =  \Prj\Model\User::query($sql);


            foreach($list as $v){
                $total    = $v['TOT'];
                $userAcc  = $v['userAcc'];
                $name= $v['name'];
                $phone =substr_replace($userAcc,'XXXX',3,4);

                $data[] =[
                    'total' => $total,
                    'phone'=> $phone,
                    'productName'=>$name,
                ];
            }

            return $data;

        }
    }

    protected function getProductList($labelName){

        if(!empty($labelName)){

            $sql = "SELECT MPL.labelName ,MP.productOid,GP.name,MIT.orderAmount
                FROM jz_db.t_money_platform_label AS MPL
                LEFT JOIN jz_db.t_money_platform_label_product AS MP ON MP.labelOid = MPL.oid
                LEFT JOIN jz_db.t_gam_product AS GP ON GP.oid = MP.productOid
                LEFT JOIN jz_db.t_money_investor_tradeorder AS MIT ON MIT.productOid = GP.oid
                WHERE MPL.labelName = '".$labelName."'
                GROUP BY GP.name
                ORDER BY MIT.orderAmount
                DESC 
                ";
            $list =  \Prj\Model\User::query($sql);


            foreach($list as $va){
                $productId = $va['productOid'];
                $name       = $va['name'];

                $data []= [
                    'name' => $name,
                    'productId'=>$productId,
                ];
            }

            return $data;

        }
    }

    /**
     * Hand 设置缓存
     * @param array $data
     * @return mixed
     */
    protected function setCache($data = []){
        $data['mark'] = date('YmdHis');
        $res = [
            'data' => $data,
            'updateTime' => $data['mark'],
        ];
        return $this->redis()->exec([
            ['SETEX' , $this->redis_key , 3600 * 24 * 15 , json_encode($res , 256) ]
        ]);
    }

    /**
     * Hand 读取缓存
     * @return mixed
     */
    protected function getCache(){
        $res = json_decode($this->redis()->exec([
            ['GET' , $this->redis_key ]
        ]) , true);
        return empty($res) ? [] : $res['data'];
    }

    public function test_ZyHeroRank0721(){
        $this->crond();
    }
}