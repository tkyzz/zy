<?php
namespace Prj\Events;

/**
 * 成功充值事件处理类
 *
 * @author simon.wang
 */
use Lib\Misc\Result;
USE Prj\Loger;

class ChargeOk extends \Sooh2\EvtQue\EvtProcess{

    protected static $config = [
        'eventId' => '',
    ];

    public function init($evtData)
    {
        Loger::$prefix = '['. get_called_class() .']';
        return parent::init($evtData); // TODO: Change the autogenerated stub
    }

    public function onEvt()
    {
        error_log("trace event on ".__CLASS__.' with data='. json_encode($this->evtData));
        $sendCouponMsg = $this->send_charge_coupon();
        $charge_user_final = $this->charge_user_final();
        return 'done,send_charge_coupon#' . $sendCouponMsg."#charge_user_final#".$charge_user_final;
    }

    /**
     * Hand 发放充值红包
     * @param string $userId
     * @param string $chargeId
     * @return mixed|string
     */
    protected function send_charge_coupon($userId = '' , $chargeId = ''){
        $chargeId = $chargeId ? $chargeId : $this->evtData->args;
        $userId = $userId ? $userId : $this->evtData->userId;
        if(empty($chargeId)){
            Loger::out('充值订单ID为空!' , LOG_ERR);
            return '充值订单ID为空!';
        }
        $isFirstRet = $this->isFirstCharge($chargeId);
        if(!Result::check($isFirstRet))return $isFirstRet['message'];
        $isFirst = $isFirstRet['data']['isFirst'];
        if($isFirst){
            $params = [
                'userId' => $userId,
                'actCode' => \Prj\Model\Activity::charge_code,
            ];
            $sendRet = \Prj\Bll\EventCoupon::getInstance()->sendCoupon($params);
            return $sendRet['message'];
        }else{
            Loger::out('不是首次充值');
            Loger::out('首单充值的ID是: '.$isFirstRet['data']['oid']);
            return '不是首次充值';
        }
    }

    /**
     * Hand 检查是否首次充值
     * @param $chargeId
     * @return array
     */
    protected function isFirstCharge($chargeId){
        $chargeInfo = \Prj\Model\MimosaBankOrder::getOne(['oid' => $chargeId]);
        if(empty($chargeInfo))return Result::get(RET_ERR , '查询不到的充值订单!');

        $oldCharge = \Prj\Model\MimosaBankOrder::getOne([
            'investorOid' => $chargeInfo['investorOid'],
            'orderType' => 'deposit',
            'orderStatus' => 'done',
            '<completeTime' => $chargeInfo['completeTime'],
        ]);

        if(empty($oldCharge)){
            return Result::get(RET_SUCC , '' , ['isFirst' => 1]);
        }else{
            return Result::get(RET_SUCC , '' , ['isFirst' => 0 , 'oid' => $oldCharge['oid']]);
        }
    }

    public function test_send_charge_coupon($userId , $chargeId){
        return $this->send_charge_coupon($userId , $chargeId);
    }


    public function charge_user_final($userId=''){
        $userId = $userId?$userId:$this->evtData->userId;
        $charge = \Prj\Bll\Finals\UserFinal::getInstance()->addChargeFinal($userId);
        Loger::out($charge);
        if(!Result::check($charge)) return $charge['message'];
    }
}
